import{_ as l,o as i,c as e,V as a}from"./chunks/framework.75ed6a74.js";const t=JSON.parse('{"title":"系统设计与优化","description":"","frontmatter":{},"headers":[{"level":2,"title":"具体题目","slug":"具体题目","link":"#具体题目","children":[{"level":3,"title":"如何做性能优化？","slug":"如何做性能优化","link":"#如何做性能优化","children":[]},{"level":3,"title":"如何提升代码质量？","slug":"如何提升代码质量","link":"#如何提升代码质量","children":[]},{"level":3,"title":"如何进行效率提升","slug":"如何进行效率提升","link":"#如何进行效率提升","children":[]},{"level":3,"title":"怎么设计埋点系统","slug":"怎么设计埋点系统","link":"#怎么设计埋点系统","children":[]},{"level":3,"title":"怎么做搭建系统","slug":"怎么做搭建系统","link":"#怎么做搭建系统","children":[]},{"level":3,"title":"怎么做客户端离线资源系统？","slug":"怎么做客户端离线资源系统","link":"#怎么做客户端离线资源系统","children":[]},{"level":3,"title":"怎么优化 webpack","slug":"怎么优化-webpack","link":"#怎么优化-webpack","children":[]}]}],"relativePath":"system-design/index.md","filePath":"system-design/index.md"}'),r={name:"system-design/index.md"},p=[a('<h1 id="系统设计与优化" tabindex="-1">系统设计与优化 <a class="header-anchor" href="#系统设计与优化" aria-label="Permalink to &quot;系统设计与优化&quot;">​</a></h1><ul><li><p>CMS 可视化搭建系统 🔥</p></li><li><p>前端基建——前端编码规范⼯程化 🔥</p></li><li><p>前端稳定性建设——APM 性能监控系统 🔥</p></li><li><p>CI/CD 构建部署系统</p></li><li><p>埋点系统 🔥</p></li><li><p>客户端离线资源系统 🔥</p></li><li><p>前端灰度发布系统</p></li><li><p>脚手架搭建设计方案</p></li><li><p>告警通知系统</p></li><li><p>优化 webpack</p></li><li><p>前端资源容灾方案设计</p></li><li><p>cdn-cli 上传工具方案</p></li><li><p><a href="https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md" target="_blank" rel="noreferrer">https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md</a></p></li></ul><p>找到问题的关键点，找到如何衡量关键点的方法，从系统运行的全流程进行分析，针对每个流程进行分别优化。</p><h2 id="具体题目" tabindex="-1">具体题目 <a class="header-anchor" href="#具体题目" aria-label="Permalink to &quot;具体题目&quot;">​</a></h2><h3 id="如何做性能优化" tabindex="-1">如何做性能优化？ <a class="header-anchor" href="#如何做性能优化" aria-label="Permalink to &quot;如何做性能优化？&quot;">​</a></h3><p>问题的关键是性能，那么，性能指的是什么？页面加载的快慢和页面是否流畅。</p><p>那么用什么指标来衡量呢?页面加载时长和帧率</p><p>怎么计算这些指标呢?加载时长可以使用 performance.timing,API 上报，onload 等事件。而帧率可以使用 raf 来计算。</p><p>那么我们要怎么做性能优化呢?针对用户访问的全流程，每一步进行优化。如 dns 解析，tcp 链接，渲染页面等。</p><p>参考文章: <a href="https://hpoenixf.com/posts/11026/" target="_blank" rel="noreferrer">https://hpoenixf.com/posts/11026/</a></p><h3 id="如何提升代码质量" tabindex="-1">如何提升代码质量？ <a class="header-anchor" href="#如何提升代码质量" aria-label="Permalink to &quot;如何提升代码质量？&quot;">​</a></h3><p>同样我们要先想以下的问题</p><p>什么是代码质量？代码质量有哪些指标（代码性能、代码的缺陷数量）？怎么计算指标？</p><p>怎么提升代码质量？</p><p>从研发的流程着手。</p><ul><li>需求评审</li><li>代码初始化</li><li>静态代码检查（lint 检查）</li><li>提交代码(git commit 钩子)</li><li>测试代码</li><li>发布代码（规则拦截）</li><li>数据监控</li></ul><h3 id="如何进行效率提升" tabindex="-1">如何进行效率提升 <a class="header-anchor" href="#如何进行效率提升" aria-label="Permalink to &quot;如何进行效率提升&quot;">​</a></h3><p>怎么衡量效率？人日？</p><p>怎么提升效率?跟上面的提升代码质量的阶段比较接近，不重复讲了。</p><h3 id="怎么设计埋点系统" tabindex="-1">怎么设计埋点系统 <a class="header-anchor" href="#怎么设计埋点系统" aria-label="Permalink to &quot;怎么设计埋点系统&quot;">​</a></h3><p>关键的问题是数据，因此我们要从数据着手</p><ul><li><p>了解我们要上报哪些数据（性能/用户行为/错误）</p></li><li><p>怎么上报数据（gif，api）</p></li><li><p>怎么处理数据（日志清洗，归类，存储）</p></li><li><p>怎么查看数据（可视化，权限系统）</p></li><li><p>怎么利用数据（生成报表，报警监控）</p></li><li><p><a href="https://www.gairuo.com/p/event-tracking" target="_blank" rel="noreferrer">https://www.gairuo.com/p/event-tracking</a></p></li></ul><h3 id="怎么做搭建系统" tabindex="-1">怎么做搭建系统 <a class="header-anchor" href="#怎么做搭建系统" aria-label="Permalink to &quot;怎么做搭建系统&quot;">​</a></h3><p>关键的元素是页面。因此我们要围绕页面的生产，页面的配置，页面的管理，页面的渲染等来进行讨论</p><ul><li><a href="https://zhuanlan.zhihu.com/p/164558106" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/164558106</a></li></ul><h4 id="怎么实现前端灰度发布系统" tabindex="-1">怎么实现前端灰度发布系统 <a class="header-anchor" href="#怎么实现前端灰度发布系统" aria-label="Permalink to &quot;怎么实现前端灰度发布系统&quot;">​</a></h4><p>关键是灰度控制。灰度配置，放量策略，流浪染色等</p><p>无论是哪种灰度，一般需要满足以下 2 点要求：</p><ol><li>需要一个放量配置，给产品/运营等工作人员配置放量策略；</li><li>需要做到同一个用户始终访问的是同一个版本的代码，如果同个用户上个请求访问的是 A 版本，下个请求访问的是 B 版本，就可能会出问题。</li></ol><h3 id="怎么做客户端离线资源系统" tabindex="-1">怎么做客户端离线资源系统？ <a class="header-anchor" href="#怎么做客户端离线资源系统" aria-label="Permalink to &quot;怎么做客户端离线资源系统？&quot;">​</a></h3><p>关键问题是资源。因为我们要解答</p><ul><li>发放什么资源</li><li>什么时候发放</li><li>怎么发放</li><li>怎么更新、删除资源</li><li>怎么使用资源</li><li>资源的优先级、有效期等问题</li></ul><h3 id="怎么优化-webpack" tabindex="-1">怎么优化 webpack <a class="header-anchor" href="#怎么优化-webpack" aria-label="Permalink to &quot;怎么优化 webpack&quot;">​</a></h3><p>webpack 的优化可以分为缩小体积和减少打包时间两个方向。</p><p>我们可以从 webpack 打包的流程为切入点进行分析。</p><p>初始化参数阶段、加载插件阶段、确定入口阶段、编译阶段、完成编译、输出资源、写入文件</p>',36)];const n=l(r,[["render",function(l,a,t,r,n,h){return i(),e("div",null,p)}]]);export{t as __pageData,n as default};
