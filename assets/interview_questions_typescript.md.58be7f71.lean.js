import{_ as s,o as n,c as a,V as l}from"./chunks/framework.75ed6a74.js";const e=JSON.parse('{"title":"TypeScript","description":"","frontmatter":{},"headers":[{"level":3,"title":"const 和 readonly 的区别？枚举和常量枚举的区别？接口和类型别名的区别？","slug":"const-和-readonly-的区别-枚举和常量枚举的区别-接口和类型别名的区别","link":"#const-和-readonly-的区别-枚举和常量枚举的区别-接口和类型别名的区别","children":[]},{"level":3,"title":"any 类型的作用是什么？","slug":"any-类型的作用是什么","link":"#any-类型的作用是什么","children":[]},{"level":3,"title":"any、never、unknown、null & undefined 和 void 有什么区别？","slug":"any、never、unknown、null-undefined-和-void-有什么区别","link":"#any、never、unknown、null-undefined-和-void-有什么区别","children":[]},{"level":3,"title":"interface 可以给 Function / Array / Class（Indexable）做声明吗？","slug":"interface-可以给-function-array-class-indexable-做声明吗","link":"#interface-可以给-function-array-class-indexable-做声明吗","children":[]},{"level":3,"title":"可以给 String、Number、Boolean、Symbol、Object 等给类型做声明吗？","slug":"可以给-string、number、boolean、symbol、object-等给类型做声明吗","link":"#可以给-string、number、boolean、symbol、object-等给类型做声明吗","children":[]},{"level":3,"title":"的 this 和 JavaScript 中的 this 有什么差异？","slug":"的-this-和-javascript-中的-this-有什么差异","link":"#的-this-和-javascript-中的-this-有什么差异","children":[]},{"level":3,"title":"使用 Union Types 时有哪些注意事项？","slug":"使用-union-types-时有哪些注意事项","link":"#使用-union-types-时有哪些注意事项","children":[]},{"level":3,"title":"TypeScript 如何设计 Class 的声明？","slug":"typescript-如何设计-class-的声明","link":"#typescript-如何设计-class-的声明","children":[]},{"level":3,"title":"如何联合枚举类型的 Key?","slug":"如何联合枚举类型的-key","link":"#如何联合枚举类型的-key","children":[]},{"level":3,"title":"type 和 interface 的区别?","slug":"type-和-interface-的区别","link":"#type-和-interface-的区别","children":[]},{"level":3,"title":"?.、??、!、!.、_、** 等符号的含义？","slug":"、-、-、-、-、-等符号的含义","link":"#、-、-、-、-、-等符号的含义","children":[]},{"level":3,"title":"简单介绍一下 TypeScript 模块的加载机制？","slug":"简单介绍一下-typescript-模块的加载机制","link":"#简单介绍一下-typescript-模块的加载机制","children":[]},{"level":3,"title":"简单聊聊你对 TypeScript 类型兼容性的理解？","slug":"简单聊聊你对-typescript-类型兼容性的理解","link":"#简单聊聊你对-typescript-类型兼容性的理解","children":[]},{"level":3,"title":"协变、逆变、双变和抗变的理解？","slug":"协变、逆变、双变和抗变的理解","link":"#协变、逆变、双变和抗变的理解","children":[]},{"level":3,"title":"对象展开会有什么副作用吗？","slug":"对象展开会有什么副作用吗","link":"#对象展开会有什么副作用吗","children":[]},{"level":3,"title":"类型的全局声明和局部声明","slug":"类型的全局声明和局部声明","link":"#类型的全局声明和局部声明","children":[]},{"level":3,"title":"同名的 interface 或者同名的 interface 和 class 可以合并吗？","slug":"同名的-interface-或者同名的-interface-和-class-可以合并吗","link":"#同名的-interface-或者同名的-interface-和-class-可以合并吗","children":[]},{"level":3,"title":"如何使 TypeScript 项目引入并识别编译为 JavaScript 的 npm 库包？","slug":"如何使-typescript-项目引入并识别编译为-javascript-的-npm-库包","link":"#如何使-typescript-项目引入并识别编译为-javascript-的-npm-库包","children":[]},{"level":3,"title":"tsconfig.json 中有哪些配置项信息？","slug":"tsconfig-json-中有哪些配置项信息","link":"#tsconfig-json-中有哪些配置项信息","children":[]},{"level":3,"title":"如何设置模块导入的路径别名？","slug":"如何设置模块导入的路径别名","link":"#如何设置模块导入的路径别名","children":[]},{"level":3,"title":"declare，declare global 是什么？","slug":"declare-declare-global-是什么","link":"#declare-declare-global-是什么","children":[]},{"level":3,"title":"对 TypeScript 类中成员的 public、private、protected、readonly 修饰符的理解？","slug":"对-typescript-类中成员的-public、private、protected、readonly-修饰符的理解","link":"#对-typescript-类中成员的-public、private、protected、readonly-修饰符的理解","children":[]},{"level":3,"title":"keyof 和 typeof 关键字的作用？","slug":"keyof-和-typeof-关键字的作用","link":"#keyof-和-typeof-关键字的作用","children":[]},{"level":3,"title":"简述工具类型 Exclude、Omit、Merge、Intersection、Overwrite 的作用。","slug":"简述工具类型-exclude、omit、merge、intersection、overwrite-的作用。","link":"#简述工具类型-exclude、omit、merge、intersection、overwrite-的作用。","children":[]},{"level":3,"title":"数组定义的两种方式","slug":"数组定义的两种方式","link":"#数组定义的两种方式","children":[]}],"relativePath":"interview/questions/typescript.md","filePath":"interview/questions/typescript.md"}'),p={name:"interview/questions/typescript.md"},o=[l("",71)];const r=s(p,[["render",function(s,l,e,p,r,t){return n(),a("div",null,o)}]]);export{e as __pageData,r as default};
