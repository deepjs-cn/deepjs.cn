import{_ as e,o as a,c as t,V as i}from"./chunks/framework.75ed6a74.js";const r=JSON.parse('{"title":"实现加减乘除计算","description":"","frontmatter":{},"headers":[],"relativePath":"handwrite/my-calc/index.md","filePath":"handwrite/my-calc/index.md"}'),l={name:"handwrite/my-calc/index.md"},n=[i('<h1 id="实现加减乘除计算" tabindex="-1">实现加减乘除计算 <a class="header-anchor" href="#实现加减乘除计算" aria-label="Permalink to &quot;实现加减乘除计算&quot;">​</a></h1><p>思路</p><ol><li>将加减乘除表达式转为后缀表达式 <code>3+4*(2-1) ==&gt; 3421-*+</code></li><li>使用栈来辅助转换过程</li><li>计算后缀表达式，也可以使用栈来辅助计算过程</li></ol><blockquote><p>后缀式即逆波兰式，是波兰逻辑学家卢卡西维奇（Lukasiewicz）发明的一种表示表达式的方法。 这种表示方式把运算符写在运算对象的后面，例如，把 a+b 写成 ab+，所以也称为后缀式。 这种表示法的优点是根据运算对象和算符的出现次序进行计算，不需要使用括号，也便于用械实现求值。</p></blockquote><p>参考</p><ul><li><a href="https://juejin.cn/post/7012562592774389768" target="_blank" rel="noreferrer">https://juejin.cn/post/7012562592774389768</a></li></ul>',6)];const o=e(l,[["render",function(e,i,r,l,o,c){return a(),t("div",null,n)}]]);export{r as __pageData,o as default};
