import{_ as i,o as e,c as l,V as t}from"./chunks/framework.75ed6a74.js";const a=JSON.parse('{"title":"前端编码规范⼯程化","description":"","frontmatter":{},"headers":[],"relativePath":"system-design/spec/index.md","filePath":"system-design/spec/index.md"}'),s={name:"system-design/spec/index.md"},n=[t('<h1 id="前端编码规范工程化" tabindex="-1">前端编码规范⼯程化 <a class="header-anchor" href="#前端编码规范工程化" aria-label="Permalink to &quot;前端编码规范⼯程化&quot;">​</a></h1><p>前端基建——前端编码规范⼯程化</p><ol><li>基于 lerna+pnpm 实现 monorepo 项目管理</li><li>前端代码规范辅助工具，包括但不限于如下内容 <ol><li>editorconfig</li><li>prettier</li><li>eslint</li><li>stylelint</li><li>commitlint</li><li>mardownlint</li><li>husky</li><li>lint-staged</li></ol></li><li>单元测试集成</li><li>定制脚手架，以交互形式一键接入，实现对 JavaScript, TypeScript, React, Vue, Taro, uniapp 等不同类型的前端项目的</li><li>对存量项目进行优化：对于存量代码不符合规范的问题，支持一键扫描和一键修复，支持存量存量增量更新，最小化对接成本</li><li>通过 git pre-commit 钩子, 对提交文件进行编码规范的扫描；通过 commit-msg 钩子，对本地代码提交 message 的格式进行扫描</li></ol>',3)];const r=i(s,[["render",function(i,t,a,s,r,o){return e(),l("div",null,n)}]]);export{a as __pageData,r as default};
