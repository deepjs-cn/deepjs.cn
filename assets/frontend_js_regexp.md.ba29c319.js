import{_ as s,o as l,c as n,V as a,C as p,a as o}from"./chunks/framework.75ed6a74.js";const e=JSON.parse('{"title":"正则基础","description":"","frontmatter":{},"headers":[{"level":3,"title":"正则的适用场","slug":"正则的适用场","link":"#正则的适用场","children":[]},{"level":3,"title":"基础属性、方法与标识量","slug":"基础属性、方法与标识量","link":"#基础属性、方法与标识量","children":[]},{"level":3,"title":"正则字符集匹配","slug":"正则字符集匹配","link":"#正则字符集匹配","children":[]},{"level":2,"title":"基础知识、基本概念","slug":"基础知识、基本概念","link":"#基础知识、基本概念","children":[{"level":3,"title":"常用匹配集合","slug":"常用匹配集合","link":"#常用匹配集合","children":[]}]},{"level":2,"title":"正则实战","slug":"正则实战","link":"#正则实战","children":[{"level":3,"title":"正则特殊情况与注意事项","slug":"正则特殊情况与注意事项","link":"#正则特殊情况与注意事项","children":[]},{"level":3,"title":"特殊属性的意义","slug":"特殊属性的意义","link":"#特殊属性的意义","children":[]},{"level":3,"title":"回溯与优先匹配","slug":"回溯与优先匹配","link":"#回溯与优先匹配","children":[]},{"level":3,"title":"优化策略","slug":"优化策略","link":"#优化策略","children":[]},{"level":3,"title":"性能提升","slug":"性能提升","link":"#性能提升","children":[]},{"level":3,"title":"正则例子","slug":"正则例子","link":"#正则例子","children":[]},{"level":3,"title":"优化的例子：缩短了引擎从开始工作到反馈匹配结果（成功/失败）的时间","slug":"优化的例子-缩短了引擎从开始工作到反馈匹配结果-成功-失败-的时间","link":"#优化的例子-缩短了引擎从开始工作到反馈匹配结果-成功-失败-的时间","children":[]},{"level":3,"title":"一段简单的 Vue1.0 的 text 解析的代码","slug":"一段简单的-vue1-0-的-text-解析的代码","link":"#一段简单的-vue1-0-的-text-解析的代码","children":[]}]}],"relativePath":"frontend/js/regexp.md","filePath":"frontend/js/regexp.md"}'),t={name:"frontend/js/regexp.md"},c=[a('<h1 id="正则基础" tabindex="-1">正则基础 <a class="header-anchor" href="#正则基础" aria-label="Permalink to &quot;正则基础&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>JS 的正则引擎是 NFA----“非确定型有限自动机”----匹配慢，但编译快</p></div><h3 id="正则的适用场" tabindex="-1">正则的适用场 <a class="header-anchor" href="#正则的适用场" aria-label="Permalink to &quot;正则的适用场&quot;">​</a></h3><ol><li>适合查找匹配复杂的 substring</li><li>能够找到查找“子串”的规律，例如：Vue1.0 的词法解析，就大量运用了正则</li></ol><h3 id="基础属性、方法与标识量" tabindex="-1">基础属性、方法与标识量 <a class="header-anchor" href="#基础属性、方法与标识量" aria-label="Permalink to &quot;基础属性、方法与标识量&quot;">​</a></h3><ol><li>lastIndex：下一个匹配的起始位置</li><li>flags：返回正则的标识符</li><li>ignoreCase：是否忽略大小写</li><li>multiline：对匹配的多行字符串看做多行来匹配，尤其对于位置匹配^$</li><li>sticky：下一次匹配一定在 lastIndex 位置开始</li><li>global: 下次匹配位置可能在 lastIndex 位置开始，也可能在其后面开始</li><li>dotAll：是否匹配新行</li><li>unicode：/u 一串 Unicode 代码点</li><li>compile() 运行期间重新编译正则表达式</li><li>exec() 匹配项的搜索，设置 <code>g</code> 标志位时，多次执行 exec 查找同一字符串，查找从 lastIndex 属性指定的位置开始 <ol><li>index 匹配到的字符位于原始字符串的索引值，</li><li>input 原始字符串</li><li>groups 捕获组对象，</li><li>indices 在设置了 d 标志时存在，一个数组包含子字符串的边界，第一个元素为开始索引，第二表示结束索引</li></ol></li><li>match() 匹配并返回匹配结果，matchAll</li><li>replace() 用给定的新子串，替换匹配结果</li><li>search() 搜索匹配项，返回在支付串中找到的字符索引</li><li>test() 会更新 lastIndex，即使再次查找 lastIndex 也不好被重置</li><li>split()</li></ol><h3 id="正则字符集匹配" tabindex="-1">正则字符集匹配 <a class="header-anchor" href="#正则字符集匹配" aria-label="Permalink to &quot;正则字符集匹配&quot;">​</a></h3>',7),p("table",null,[p("thead",null,[p("tr",null,[p("th",{style:{"text-align":"left"}},"字符"),p("th",{style:{"text-align":"left"}},"含义")])]),p("tbody",null,[p("tr",null,[p("td",{style:{"text-align":"left"}},"\\w, \\W"),p("td",{style:{"text-align":"left"}},"字母、数字、下划线")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\d, \\D"),p("td",{style:{"text-align":"left"}},"只匹配拉丁字母的数字 或 非数字")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\b, \\B"),p("td",{style:{"text-align":"left"}},"单词边界，即字与空格间的位置，一边为\\w，一边为非\\w；左右两边都为\\w与\\W之间的位置，\\w与^之间的位置，\\w与$之间的位置")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\s, \\S"),p("td",{style:{"text-align":"left"}},"\\s 是匹配所有空白符，包括换行，等价于 [ \\f\\n\\r\\t\\v]；\\S 非空白符，不包括换行")]),p("tr",null,[p("td",{style:{"text-align":"left"},UnicodeBinary:"","属性名":""},"\\p{ Unicode 属性值} 或 \\p{Unicode 属性名=Unicode 属性值} 或 \\p"),p("td",{style:{"text-align":"left"}},"指定 unicode 的匹配范围")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"^"),p("td",{style:{"text-align":"left"}},"起始位置")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"$"),p("td",{style:{"text-align":"left"}},"结束位置")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"."),p("td",{style:{"text-align":"left"}},"任何单个字符")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"*"),p("td",{style:{"text-align":"left"}},"匹配前面的字符零次或多次")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"+"),p("td",{style:{"text-align":"left"}},"匹配前面的字符一次 或 多次")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"{n} 或 {m,n}"),p("td",{style:{"text-align":"left"}},"匹配前面的字符 n 次 或 m~n 次")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"[^XXX]"),p("td",{style:{"text-align":"left"}},"不包括括号中的字符集")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"[xxxx]"),p("td",{style:{"text-align":"left"}},"匹配括号中的任意字符，字符直接是或的关系")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"[0-9]"),p("td",{style:{"text-align":"left"}},"表示匹配范围")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\f"),p("td",{style:{"text-align":"left"}},"换页符 等价于 \\x0c")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\n"),p("td",{style:{"text-align":"left"}},"换行符 等价于 \\x0a")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\r"),p("td",{style:{"text-align":"left"}},"回车符 等价于 \\x0d")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\t"),p("td",{style:{"text-align":"left"}},"制表符 等价于 \\x09")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"\\v"),p("td",{style:{"text-align":"left"}},"垂直制表符 等价于 \\x0b")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"其他"),p("td",{style:{"text-align":"left"}},"\\x20 空白符 \\x0A(16) \\011(8) posix 字符类")]),p("tr",null,[p("td",{style:{"text-align":"left"}},"修饰符"),p("td",{style:{"text-align":"left"}},[o("/g 全局，/i 不区分大小写，/m 多行匹配，只影响^和$， /s 让"),p("code",null,"."),o("包含换行，/y sticky，/u unicode")])])])],-1),a('<h2 id="基础知识、基本概念" tabindex="-1">基础知识、基本概念 <a class="header-anchor" href="#基础知识、基本概念" aria-label="Permalink to &quot;基础知识、基本概念&quot;">​</a></h2><ol><li>捕获：(exp) 将相关匹配存储到一个<code>临时缓冲区</code>中，缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。 <code>reg?&lt;name&gt;exp</code> 匹配 exp, 并将捕获文本放到名称为 name 的组里</li><li>非捕获：(?:exp) 在需要分组，但不捕获时使用</li><li>零宽度断言：位置匹配，不消耗字符，也就是说，在一个匹配发生后，匹配字符之后立即开始下一次匹配的搜索，而<code>不是从包含环视的字符之后</code>开始： <ol><li>^ 匹配起始位置</li><li>$ 匹配结束位置</li><li>\\b 单词边界</li><li>\\B 非单词边界</li><li>\\W 与\\w 直接的位置</li><li>正向预查：作为<code>限制条件使用</code><ol><li>正向环视 exp1(?= p) ---- 找 p 前面的 exp1</li><li>反向环视 (?&lt;=p)exp1 ---- 找 p 后面的 exp1</li><li>否定正向环视 exp1(?!p) ---- 找 exp1 后面不是 p</li><li>否定反向环视 (?&lt;!p)exp1 ---- 前面不是 p 的 exp1</li><li>占有字符：子表达式匹配到的是字符内容，而非位置，且在最终结果中；互斥的，即一个字符同一时间只能由一个子表达式匹配</li></ol></li></ol></li><li>引用：&quot;$2&quot;,&quot;$1&quot; 获取捕获分组的第几个匹配子项；&quot;$0&quot;匹配到的整体</li><li>反向引用：使用前面匹配的内容作为正则表达式的一部分 \\1</li><li>贪婪量词 *, + 「先下手为强！深度优先搜索」</li><li>惰性量词 ?, *?, +? 「不贪、很知足，但有时为了整体匹配成功，也会进行回溯，再多塞点」</li><li>查找机制：从左到右，可使用贪婪 (<code>*</code> 或 <code>+</code>) 或非贪婪 (<code>*?</code>或<code>+?</code>) 匹配，子表达式匹配成功，继续向右，否则进行回溯过程，再尝试匹配</li><li>回溯机制 <ol><li>确定匹配成功的部分</li><li>正在匹配的部分不成功，即进行回退，默认先回退一步，成功则继续，不成功则继续回退</li></ol></li><li>分支 |</li></ol><h3 id="常用匹配集合" tabindex="-1">常用匹配集合 <a class="header-anchor" href="#常用匹配集合" aria-label="Permalink to &quot;常用匹配集合&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 匹配中文字符的正则表达式：</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> han </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">\\u4e00-\\u9fa5</span><span style="color:#89DDFF;">]/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 匹配双字节字符 (包括汉字在内)：</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hanChar </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[^</span><span style="color:#C3E88D;">\\x00-\\xff</span><span style="color:#89DDFF;">]/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 零宽度断言例子</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(?=</span><span style="color:#C3E88D;">D</span><span style="color:#89DDFF;">)[</span><span style="color:#C3E88D;">E-F</span><span style="color:#89DDFF;">]+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 1. 位置开始位置 0；</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 2. 零宽度子表达式之间不互斥，即同一个位置可以由多个零宽度子表达式匹配，所以环视从位置 0 开始尝试匹配，右侧为字符 D；才为匹配成功；</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 3. 因为上个匹配只进行匹配位置，结果不保存到最终结果，如果上个匹配成功的位置为 0，那么下面也是从 0 位置开始匹配。</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 其他例子</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(?:</span><span style="color:#A6ACCD;">\\/</span><span style="color:#89DDFF;">(?=</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">))?</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\/</span><span style="color:#C3E88D;">dialog</span><span style="color:#89DDFF;">(?:</span><span style="color:#A6ACCD;">\\/</span><span style="color:#89DDFF;">(?=</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">))?</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\(</span><span style="color:#89DDFF;">(?!</span><span style="color:#A6ACCD;">\\?</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">tom</span><span style="color:#89DDFF;">(?=(</span><span style="color:#C3E88D;">and</span><span style="color:#89DDFF;">))</span><span style="color:#F78C6C;">\\1</span><span style="color:#C3E88D;">jerry</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#89DDFF;">/(?=(</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">+))</span><span style="color:#F78C6C;">\\1</span><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">X</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{1,3}(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(?![</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)(?![</span><span style="color:#C3E88D;">a-zA-Z</span><span style="color:#89DDFF;">]+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{4,8}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//只是限定了前面或者后面匹配的规则，而不占用匹配的字符。</span></span>\n<span class="line"><span style="color:#89DDFF;">/(?&lt;=</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+(?=</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">)/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//匹配两边是空白符的数字，不包括空白符</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="正则实战" tabindex="-1">正则实战 <a class="header-anchor" href="#正则实战" aria-label="Permalink to &quot;正则实战&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 匹配模版中的事件</span></span>\n<span class="line"><span style="color:#A6ACCD;">onRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">v-on:</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>\n<span class="line"><span style="color:#A6ACCD;">dirRE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VBIND_PROP_SHORTHAND</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">?</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">v-</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">v-</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 小括号表达式</span></span>\n<span class="line"><span style="color:#A6ACCD;">stripParensRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\(</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">\\)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 中括号表达式</span></span>\n<span class="line"><span style="color:#A6ACCD;">dynamicArgRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\[</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">\\]</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 小括号表达式</span></span>\n<span class="line"><span style="color:#A6ACCD;">argRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#A6ACCD;">bindRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">v-bind:</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#A6ACCD;">propBindRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#A6ACCD;">modifierRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;">\\]</span><span style="color:#89DDFF;">]+(?=[^</span><span style="color:#A6ACCD;">\\]</span><span style="color:#89DDFF;">]*</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span></span>\n<span class="line"><span style="color:#A6ACCD;">slotRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">v-slot</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#A6ACCD;">lineBreakRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">\\r\\n</span><span style="color:#89DDFF;">]/</span></span>\n<span class="line"><span style="color:#A6ACCD;">whitespaceRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;"> \\f\\t\\r\\n</span><span style="color:#89DDFF;">]+/</span><span style="color:#F78C6C;">g</span></span>\n<span class="line"><span style="color:#A6ACCD;">invalidAttributeRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">\\s&quot;&#39;&lt;&gt;</span><span style="color:#A6ACCD;">\\/</span><span style="color:#C3E88D;">=</span><span style="color:#89DDFF;">]/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 这个是否可以优化？前面用到懒惰模式，后面用贪婪模式？这里的的优点？</span></span>\n<span class="line"><span style="color:#A6ACCD;">forAliasRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/([</span><span style="color:#C3E88D;">\\s\\S</span><span style="color:#89DDFF;">]*?)</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">+(?:</span><span style="color:#C3E88D;">in</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">of</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">+([</span><span style="color:#C3E88D;">\\s\\S</span><span style="color:#89DDFF;">]*)/</span></span>\n<span class="line"><span style="color:#A6ACCD;">forIteratorRE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">([^</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;">\\}\\]</span><span style="color:#89DDFF;">]*)(?:</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">([^</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;">\\}\\]</span><span style="color:#89DDFF;">]*))?</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// text 部分的解析</span></span>\n<span class="line"><span style="color:#A6ACCD;">defaultTagRE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\{\\{</span><span style="color:#89DDFF;">((?:</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">\\r</span><span style="color:#89DDFF;">?</span><span style="color:#C3E88D;">\\n</span><span style="color:#89DDFF;">)+?)</span><span style="color:#A6ACCD;">\\}\\}</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span></span>\n<span class="line"><span style="color:#A6ACCD;">regexEscapeRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">-.*+?^${}()|[</span><span style="color:#A6ACCD;">\\]\\/\\\\</span><span style="color:#89DDFF;">]/</span><span style="color:#F78C6C;">g</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 构建出需要的正则</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> buildRegex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cached</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">delimiters</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">open</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">delimiters</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">regexEscapeRE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">$&amp;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">close</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">delimiters</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">regexEscapeRE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">$&amp;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">open</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">((?:.|</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">n)+?)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">close</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">g</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// filter 部分的</span></span>\n<span class="line"><span style="color:#A6ACCD;">validDivisionCharRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">\\w).+\\-_$</span><span style="color:#A6ACCD;">\\]</span><span style="color:#89DDFF;">]/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 高级部分</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 匹配函数定义</span></span>\n<span class="line"><span style="color:#A6ACCD;">fnExpRE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">([</span><span style="color:#C3E88D;">\\w$_</span><span style="color:#89DDFF;">]+|</span><span style="color:#A6ACCD;">\\(</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">]*?</span><span style="color:#A6ACCD;">\\)</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">*</span><span style="color:#C3E88D;">=&gt;</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">(?:</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">+[</span><span style="color:#C3E88D;">\\w$</span><span style="color:#89DDFF;">]+)?</span><span style="color:#C3E88D;">\\s</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">\\(</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 匹配函数调用部分</span></span>\n<span class="line"><span style="color:#A6ACCD;">fnInvokeRE </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\(</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">]*?</span><span style="color:#A6ACCD;">\\)</span><span style="color:#C3E88D;">;</span><span style="color:#89DDFF;">*</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 表达式属性访问路径匹配</span></span>\n<span class="line"><span style="color:#A6ACCD;">simplePathRE </span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">A-Za-z_$</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">\\w$</span><span style="color:#89DDFF;">]*(?:</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">A-Za-z_$</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">\\w$</span><span style="color:#89DDFF;">]*|</span><span style="color:#A6ACCD;">\\[</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">]*?</span><span style="color:#C3E88D;">&#39;]</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">\\[</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">]*?</span><span style="color:#C3E88D;">&quot;]</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">\\[</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;">]</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">\\[</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">A-Za-z_$</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">\\w$</span><span style="color:#89DDFF;">]*</span><span style="color:#C3E88D;">]</span><span style="color:#89DDFF;">)*</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h3 id="正则特殊情况与注意事项" tabindex="-1">正则特殊情况与注意事项 <a class="header-anchor" href="#正则特殊情况与注意事项" aria-label="Permalink to &quot;正则特殊情况与注意事项&quot;">​</a></h3><ol><li>对捕获的引用：$1, $2... 或 RegExp.$2 != express，其注意事项 <ul><li>如果表示不是引用，而是表示\\和 0 时，需要使用 (?:\\1)0 或\\1(?:0)</li><li>引用不存在的分组：如\\2，即是对 2 的转义</li><li>分组后面有量词时，则捕获的是最后一次的匹配，如：/(\\d)+ \\1/.test(&quot;12345 5&quot;)</li></ul></li><li>回溯在不同情况下的表现情况： <ul><li>贪婪模式下：模糊度过高，直接匹配到比较考结束位置了，下一个匹配项无法匹配，则需要向前回溯，如下面横向对比的例子-----使字符组匹配尽量精确，不要范围过大</li><li>惰性模式下：匹配过少，后面的匹配不了，前一个匹配要再想后匹配，直到后一个匹配成功或者整体匹配失败</li><li>分支结构：多条匹配道路，第一个使整体匹配成功的道路，匹配不成功也要进行多次回溯</li></ul></li><li>构建正则时考虑的点 <ul><li>准确性，匹配预期的字符串</li><li>准确性，不匹配非预期的字符串</li><li>可读性和可维护性</li><li>提取正则的公共部分，使用反向引用，不断的提取优化</li><li>效率</li><li>是否需要复杂的正则，是否可以拆分成几个，分段匹配</li></ul></li><li>常用的字符组：[\\u4e00-\\u9fa5]</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 基本款</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\/\\*</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">\\*\\*\\/</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 多行注释</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\/\\/</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">\\n</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">\\*</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 单行注释</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">\\x20</span><span style="color:#A6ACCD;">\\*\\/\\/</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">0-9\\n</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">\\*</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#89DDFF;">/?</span><span style="color:#C3E88D;">!</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//不以 a 开始</span></span>\n<span class="line"><span style="color:#89DDFF;">/(?=[</span><span style="color:#C3E88D;">a-zA-Z</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">a-zA-Z</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">A-Z</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">A-Z</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">])[</span><span style="color:#C3E88D;">\\da-zA-Z</span><span style="color:#89DDFF;">]{6,12}/</span><span style="color:#F78C6C;">g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="特殊属性的意义" tabindex="-1">特殊属性的意义 <a class="header-anchor" href="#特殊属性的意义" aria-label="Permalink to &quot;特殊属性的意义&quot;">​</a></h3><ul><li>input, <code>RegExp.$_</code> 整个待匹配字符串</li><li>leftContext, RegExp[&#39;$`&#39;] 上次匹配之前的子字符串</li><li>lastMatch, <code>RegExp[&#39;$&amp;&#39;]</code> 最后匹配的字符串</li><li>multiline, <code>RegExp[&#39;$\\*&#39;]</code> 是否所有表达式都使用多行模式的布尔值</li><li>lastParen, <code>RegExp[&#39;$+&#39;]</code> 最后匹配的分组</li></ul><h3 id="回溯与优先匹配" tabindex="-1">回溯与优先匹配 <a class="header-anchor" href="#回溯与优先匹配" aria-label="Permalink to &quot;回溯与优先匹配&quot;">​</a></h3><ol><li>回溯：正则表达式的强大功能中心，它使得表达式强大、灵活、可以匹配非常复杂的模式。同时这种强大需要付出一定的代码；回溯是影响表达式引擎性能的单个最重要的因素。</li><li>优先匹配： <ul><li>如果匹配到一个位置，需要做<code>尝试匹配或者跳过匹配</code>这样的选择的时候，对于量词匹配，引擎会优先作出进行<code>尝试行为</code>，而<code>忽略量词优先的时候则进行跳过尝试匹配</code>。如 ab?c 匹配 abc 时，b 存在备选状态，如果匹配成功则放弃备选状态；如果匹配的 ac 则先进行匹配尝试，另一种状态放入到备选状态，如果尝试匹配失败，则进行回溯；</li><li>放弃量词优先：ab??c，这时先放弃量词优先，跳过了的匹配，先匹配后面的。</li></ul></li><li>线性比较，非可先限定符不会进行回溯，如{2}, 如果不包含可选限定符或替换构造，则正则能近线性时间运行。</li><li>使用可选限定或替换构造的回溯</li><li>嵌套的可靠限定符的回溯</li><li>控制回溯：非回溯子表达式，后行断言，先行断言</li><li>多选结构，尽量让匹配成功可能性大的情况放在前边，多选状态在每个位置多出多个备选状态，以便回溯 a|b|c|d</li></ol><h3 id="优化策略" tabindex="-1">优化策略 <a class="header-anchor" href="#优化策略" aria-label="Permalink to &quot;优化策略&quot;">​</a></h3><ol><li>不需要捕获的地方使用 (?:expression) 。</li><li>如果括号是非必须的，请不要加括号。</li><li>不要滥用字符数组，比如[.],请直接用. 。</li><li>使用合适的位置匹配，如^ $ ，这会加速定位。</li><li>从两次中提取必须元素，如:x+写成 xx*，a{2,4}写成 aa{0,2}。</li><li>提取多选结构开头的相同字符，如 the|this 改成 th(?:e|is)。（如果你的正则引擎不支持这么使用就改成 th(e|is)）；尤其是锚点，一定要独立出来，这样很多正则编译器会根据锚点进行特别的优化：^123|^abc 改成^(?:123|abc)。同样的$也尽量独立出来。</li><li>多选结构后边的一个表达式放入多选结构内，这样能够在匹配任何一个多选结构的时候在不退出多选结构的状态下查看后一匹配，匹配失败的更快。这种优化需要谨慎使用。</li><li>忽略优先匹配和优先匹配需要你视情况而定。如果你不确定，请使用匹配优先，它的速度是比忽略优先快的。</li><li>拆分较大正则表达式成一个个小的正则表达式，这是非常有利于提高效率的。</li><li>模拟锚点，使用合适的环视结构来预测合适的开始匹配位置，如匹配十二个月份，可以先预查首字符是否匹配：(?=JFMASOND)(?:Jan|Feb|...|Dec)。这种优化请根据实际情况使用，有时候环视结构开销可能更大。</li><li>很多情况下使用固化分组和占有优先量词能够极大提高速度。</li><li>避免像 (this|that)*这样的几乎无尽的匹配。上边提到的 (...+)*也类似。</li><li>如果能简单的匹配大幅缩短目标字符串，可以进行多次正则匹配，经过实践十分有效。</li></ol><h3 id="性能提升" tabindex="-1">性能提升 <a class="header-anchor" href="#性能提升" aria-label="Permalink to &quot;性能提升&quot;">​</a></h3><ul><li>优化尝试（比较）次数与回溯次数</li><li>减少回溯次数【减少循环查找同一个字符次数】</li><li>测试与优化工具：regexbuddy</li><li>使用正确的边界匹配器（^、$、\\b、\\B 等），限定搜索字符串位置</li><li>使用具体的元字符、字符类（\\d、\\w、\\s 等） ，[^]少用”.”字符</li><li>使用正确的量词（+、*、?、{n,m}），如果能够限定长度，匹配最佳</li><li>使用非捕获组、原子组，减少没有必要的字匹配捕获用 (?😃</li><li>进行分组匹配 | + g 模式</li><li>常用优化手段： <ul><li>精确字符组匹配范围</li><li>当不需要分组或反向引用时，使用非捕获型分组</li><li>独立出确定字符，加快判断是否匹配失败，进而加快移位的速度</li><li>提取分支公共部分，建设分支个数</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>使用 search, test, match, exec, split, replace 进行正则验证，其中 search 与 match 会把字符串参数转换成正则，所以要加转义</p></div><h3 id="正则例子" tabindex="-1">正则例子 <a class="header-anchor" href="#正则例子" aria-label="Permalink to &quot;正则例子&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">&lt;div</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">&gt;</span><span style="color:#89DDFF;">]+</span><span style="color:#C3E88D;">&gt;</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">&lt;</span><span style="color:#89DDFF;">]*(?=</span><span style="color:#C3E88D;">&lt;p</span><span style="color:#89DDFF;">)[^</span><span style="color:#C3E88D;">&gt;</span><span style="color:#89DDFF;">]+</span><span style="color:#C3E88D;">&gt;</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">&lt;</span><span style="color:#89DDFF;">]*(?=</span><span style="color:#C3E88D;">&lt;</span><span style="color:#A6ACCD;">\\/</span><span style="color:#C3E88D;">p&gt;</span><span style="color:#89DDFF;">)/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//找到 div 内的 p 标签</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">([</span><span style="color:#C3E88D;">01</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">0-3</span><span style="color:#89DDFF;">])</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-5</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 时：分</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">?[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]|</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">0-3</span><span style="color:#89DDFF;">])</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">?[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">1-5</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//时：分：秒</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]{4}</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">0-2</span><span style="color:#89DDFF;">])</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">]|[</span><span style="color:#C3E88D;">12</span><span style="color:#89DDFF;">][</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]|</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">01</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> 日期</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/[^</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">:*&lt;&gt;|&quot;?\\r\\n/</span><span style="color:#89DDFF;">]/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//不包含特殊字符</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/([^</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">:*&lt;&gt;|&quot;?\\r\\n/</span><span style="color:#89DDFF;">]+</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#89DDFF;">)*/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/([^</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">:*&lt;&gt;|&quot;?\\r\\n/</span><span style="color:#89DDFF;">]+)?/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12345678</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//后面跟随三个数字，没有排除开始位</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456789</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?!</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">)(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">12345678 123456789</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/(?!</span><span style="color:#89DDFF;font-style:italic;">\\b</span><span style="color:#89DDFF;">)(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">\\b</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//用空格时的数字</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/(?&lt;=</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">)(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  Num</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">\\B</span><span style="color:#89DDFF;">(?=(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{3})+</span><span style="color:#89DDFF;font-style:italic;">\\b</span><span style="color:#89DDFF;">)/</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">$$ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  IPv4 </span><span style="color:#89DDFF;">/^</span><span style="color:#A6ACCD;">((</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">\\d</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}|</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}|</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]\\d</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">25</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">])\\</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">\\d</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}|</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}|</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]\\d</span><span style="color:#89DDFF;">|</span><span style="color:#F78C6C;">25</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">])$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//必须包含一个字符（数字） + 密码长度 6-12 位数字或字母</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">])(?=</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">])</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//必须包含小写字母与数字 6-12 位数字或字母</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">/(?!</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)(?!</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)(?!</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">A-Z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">0-9A-Za-z</span><span style="color:#89DDFF;">]{6,12}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//密码长度 6-12 位数字或字母，即 不能全是数字 或 不能全是大写或小写字母</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>横向例子对比：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">id=&quot;.</span><span style="color:#89DDFF;">*</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//贪婪模式，会持续匹配到最后一个“结束</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">id=&quot;.</span><span style="color:#89DDFF;">*?</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//惰性匹配，存在回溯次数过多的问题</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">id=&quot;</span><span style="color:#89DDFF;">[^</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">]*</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//用否定字符组匹配</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="优化的例子-缩短了引擎从开始工作到反馈匹配结果-成功-失败-的时间" tabindex="-1">优化的例子：缩短了引擎从开始工作到反馈匹配结果（成功/失败）的时间 <a class="header-anchor" href="#优化的例子-缩短了引擎从开始工作到反馈匹配结果-成功-失败-的时间" aria-label="Permalink to &quot;优化的例子：缩短了引擎从开始工作到反馈匹配结果（成功/失败）的时间&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{6,7}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{6,7}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">|</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\(</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}</span><span style="color:#A6ACCD;">\\)</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{6,7}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}|</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">\\(</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}</span><span style="color:#A6ACCD;">\\)</span><span style="color:#89DDFF;">)[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{6,7}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//提取公共部分</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}</span><span style="color:#C3E88D;">-</span><span style="color:#89DDFF;">?|</span><span style="color:#A6ACCD;">\\(</span><span style="color:#C3E88D;">0\\d</span><span style="color:#89DDFF;">{2,3}</span><span style="color:#A6ACCD;">\\)</span><span style="color:#89DDFF;">)[</span><span style="color:#C3E88D;">1-9</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">{6,7}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//优化：</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 实数</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">+-</span><span style="color:#89DDFF;">]?(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+|</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+|</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">([</span><span style="color:#C3E88D;">+-</span><span style="color:#89DDFF;">])?(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+|</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+|</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>\n<span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">+-</span><span style="color:#89DDFF;">]?(</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+)?(</span><span style="color:#A6ACCD;">\\.</span><span style="color:#89DDFF;">)?</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><ol><li><p>写个函数，判断一个字符串是否为手机靓号，手机靓号条件：有 3 个连续相同的数字如 &#39;111&#39; 或者 有 4 个依次递增 1 的数字 &#39;1234&#39;【编程】</p></li><li><p>疑问：[\\d\\D]表示的范围 与[\\s\\S] 整体表示的范围是否一致？</p></li><li><p>/(?=.*[0-9])^/两个锚点在一起，其的作用？</p></li></ol></blockquote><h3 id="一段简单的-vue1-0-的-text-解析的代码" tabindex="-1">一段简单的 Vue1.0 的 text 解析的代码 <a class="header-anchor" href="#一段简单的-vue1-0-的-text-解析的代码" aria-label="Permalink to &quot;一段简单的 Vue1.0 的 text 解析的代码&quot;">​</a></h3><p>正则的综合运用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parseText</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">text</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>\n<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tokens</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">tagRE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">first</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oneTime</span></span>\n<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> ((</span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tagRE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;">))) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">tokens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">html</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">htmlRE</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">])</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">html</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">]</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">first</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">charCodeAt</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">oneTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">first</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">42</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// *</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oneTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tokens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      tag</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trim</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      html</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      oneTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oneTime</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">match</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span></span>\n<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tokens</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">lastIndex</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tokens</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tokens</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div>',29)];const r=s(t,[["render",function(s,a,p,o,e,t){return l(),n("div",null,c)}]]);export{e as __pageData,r as default};
