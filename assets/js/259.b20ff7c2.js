(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{536:function(e,n,t){"use strict";t.r(n);var o={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},i=t(2),l=Object(i.a)(o,function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.slotKey}},[t("p",[e._v('Follow up for problem "Populating Next Right Pointers in Each Node".\nWhat if the given tree could be any binary tree? Would your previous solution still work?')]),e._v(" "),t("p",[e._v("Note:\nYou may only use constant extra space.")]),e._v(" "),t("p",[e._v("For example,\nGiven the following binary tree,")]),e._v(" "),t("pre",[t("code",[e._v("     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7\n")])]),e._v(" "),t("p",[e._v("After calling your function, the tree should look like:")]),e._v(" "),t("pre",[t("code",[e._v("     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL\n")])])])},[],!1,null,null,null);l.options.__file="question.md";n.default=l.exports}}]);