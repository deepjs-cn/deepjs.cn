(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{513:function(n,t,e){"use strict";e.r(t);var i={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},o=e(2),s=Object(o.a)(i,function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.slotKey}},[e("p",[n._v("Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.")]),n._v(" "),e("p",[n._v("Each number in C may only be used once in the combination.")]),n._v(" "),e("p",[n._v("Note:")]),n._v(" "),e("p",[n._v("All numbers (including target) will be positive integers.\nThe solution set must not contain duplicate combinations.")]),n._v(" "),e("p",[n._v("For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8,\nA solution set is:")]),n._v(" "),e("p",[n._v("[\n[1, 7],\n[1, 2, 5],\n[2, 6],\n[1, 1, 6]\n]")])])},[],!1,null,null,null);s.options.__file="question.md";t.default=s.exports}}]);