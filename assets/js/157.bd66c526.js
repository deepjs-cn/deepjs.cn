(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{467:function(t,e,a){"use strict";a.r(e);var n={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},s=a(2),o=Object(s.a)(n,function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.slotKey}},[a("p",[t._v("Implement regular expression matching with support for '.' and '*'.")]),t._v(" "),a("p",[t._v("'.' Matches any single character.\n'*' Matches zero or more of the preceding element.")]),t._v(" "),a("p",[t._v("The matching should cover the entire input string (not partial).")]),t._v(" "),a("p",[t._v("The function prototype should be:\nbool isMatch(const char *s, const char *p)")]),t._v(" "),a("p",[t._v('Some examples:\nisMatch("aa","a") ? false\nisMatch("aa","aa") ? true\nisMatch("aaa","aa") ? false\nisMatch("aa", "a*") ? true\nisMatch("aa", ".'),a("em",[t._v('") ? true\nisMatch("ab", ".')]),t._v('") ? true\nisMatch("aab", "c'),a("em",[t._v("a")]),t._v('b") ? true')])])},[],!1,null,null,null);o.options.__file="question.md";e.default=o.exports}}]);