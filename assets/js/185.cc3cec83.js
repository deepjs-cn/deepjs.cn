(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{515:function(e,t,n){"use strict";n.r(t);var o={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},s=n(2),i=Object(s.a)(o,function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.slotKey}},[n("p",[e._v("The count-and-say sequence is the sequence of integers with the first five terms as following:")]),e._v(" "),n("ol",[n("li",[n("pre",[n("code",[e._v("1\n")])])]),e._v(" "),n("li",[n("pre",[n("code",[e._v("11\n")])])]),e._v(" "),n("li",[n("pre",[n("code",[e._v("21\n")])])]),e._v(" "),n("li",[n("pre",[n("code",[e._v("1211\n")])])]),e._v(" "),n("li",[n("pre",[n("code",[e._v("111221\n")])])])]),e._v(" "),n("p",[e._v('1 is read off as "one 1" or 11.\n11 is read off as "two 1s" or 21.\n21 is read off as "one 2, then one 1" or 1211.')]),e._v(" "),n("p",[e._v("Given an integer n, generate the nth term of the count-and-say sequence.")]),e._v(" "),n("p",[e._v("Note: Each term of the sequence of integers will be represented as a string.")]),e._v(" "),n("p",[e._v("Example 1:")]),e._v(" "),n("p",[e._v('Input: 1\nOutput: "1"')]),e._v(" "),n("p",[e._v("Example 2:")]),e._v(" "),n("p",[e._v('Input: 4\nOutput: "1211"')])])},[],!1,null,null,null);i.options.__file="question.md";t.default=i.exports}}]);