(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{306:function(t,a,s){t.exports=s.p+"assets/img/commit-message.34c744d0.png"},307:function(t,a,s){t.exports=s.p+"assets/img/git-log.510afed6.png"},308:function(t,a,s){t.exports=s.p+"assets/img/change-log.a327ddda.png"},309:function(t,a,s){t.exports=s.p+"assets/img/git-commit.04fbff99.png"},337:function(t,a,s){"use strict";s.r(a);var e=s(8),n=Object(e.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git-commit-提交信息指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-提交信息指南","aria-hidden":"true"}},[t._v("#")]),t._v(" Git Commit 提交信息指南")]),t._v(" "),e("p",[t._v("source: "),e("a",{attrs:{href:"https://github.com/angular/angular/blob/master/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("angular CONTRIBUTING.md"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.npmjs.com/package/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),e("OutboundLink")],1),t._v(" can prevent bad git commit, git push and more 🐶 woof!")])]),t._v(" "),e("h2",{attrs:{id:"提交代码流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交代码流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交代码流程")]),t._v(" "),e("ul",[e("li",[t._v("在新的分支中更改\n"),e("ul",[e("li",[e("code",[t._v("git checkout -b my-fix-branch release")])])])]),t._v(" "),e("li",[t._v("创建补丁patch，包括适当的测试用例 test cases")]),t._v(" "),e("li",[t._v("之后进行必要的更新，强制推送到远程\n"),e("ul",[e("li",[e("code",[t._v("git rebase master -i")])]),t._v(" "),e("li",[e("code",[t._v("git push -f")])])])])]),t._v(" "),e("p",[e("strong",[t._v("After your pull request is merged")])]),t._v(" "),e("p",[t._v("合并代码后，你可以删除本地分支，更新远程代码到本地")]),t._v(" "),e("ul",[e("li",[t._v("git push origin --delete my-fix-branch")]),t._v(" "),e("li",[t._v("git checkout release -f")]),t._v(" "),e("li",[t._v("git branch -D my-fix-branch")]),t._v(" "),e("li",[t._v("git pull --ff upstream master")])]),t._v(" "),e("h2",{attrs:{id:"commit-message-指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-指南","aria-hidden":"true"}},[t._v("#")]),t._v(" Commit Message 指南")]),t._v(" "),e("p",[t._v("Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n")])])]),e("p",[t._v("上面代码的 "),e("code",[t._v("-m")]),t._v(" 参数，就是用来指定 commit mesage 的。")]),t._v(" "),e("p",[t._v("如果一行不够，可以只执行 "),e("code",[t._v("git commit")]),t._v("，就会跳出文本编辑器，让你写多行。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit\n")])])]),e("p",[t._v("基本上，你写什么都行（"),e("a",{attrs:{href:"http://www.commitlogsfromlastnight.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"http://blog.no-panic.at/2014/10/20/funny-initial-git-commit-messages/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("和"),e("a",{attrs:{href:"http://whatthecommit.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("）。")]),t._v(" "),e("p",[t._v("但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(306),alt:"commit-message"}})]),t._v(" "),e("p",[t._v("目前，社区有多种 Commit message 的"),e("a",{attrs:{href:"https://github.com/ajoslin/conventional-changelog/blob/master/conventions",target:"_blank",rel:"noopener noreferrer"}},[t._v("写法规范"),e("OutboundLink")],1),t._v("。本文介绍"),e("a",{attrs:{href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 规范"),e("OutboundLink")],1),t._v("（见上图），这是目前使用最广的写法，比较合理和系统化，并且有配套的工具。")]),t._v(" "),e("h3",{attrs:{id:"一、commit-message-的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、commit-message-的作用","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、Commit message 的作用")]),t._v(" "),e("p",[t._v("格式化的Commit message，有几个好处。")]),t._v(" "),e("h4",{attrs:{id:"（1）提供更多的历史信息，方便快速浏览。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（1）提供更多的历史信息，方便快速浏览。","aria-hidden":"true"}},[t._v("#")]),t._v(" （1）提供更多的历史信息，方便快速浏览。")]),t._v(" "),e("p",[t._v("比如，下面的命令显示上次发布后的变动，每个commit占据一行。你只看行首，就知道某次 commit 的目的。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("last tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" HEAD --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:%s\n")])])]),e("p",[e("img",{attrs:{src:s(307),alt:"git-log"}})]),t._v(" "),e("h4",{attrs:{id:"（2）可以过滤某些commit（比如文档改动），便于快速查找信息。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（2）可以过滤某些commit（比如文档改动），便于快速查找信息。","aria-hidden":"true"}},[t._v("#")]),t._v(" （2）可以过滤某些commit（比如文档改动），便于快速查找信息。")]),t._v(" "),e("p",[t._v("比如，下面的命令仅仅显示本次发布新增加的功能。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("last release"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" HEAD --grep feature\n")])])]),e("h4",{attrs:{id:"（3）可以直接从-commit-生成-change-log。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（3）可以直接从-commit-生成-change-log。","aria-hidden":"true"}},[t._v("#")]),t._v(" （3）可以直接从 commit 生成 Change log。")]),t._v(" "),e("p",[t._v("Change Log 是发布新版本时，用来说明与上一个版本差异的文档，详见后文。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(308),alt:"change-log"}})]),t._v(" "),e("h3",{attrs:{id:"二、commit-message-的格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、commit-message-的格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、Commit message 的格式")]),t._v(" "),e("p",[t._v("每次提交，Commit message 都包括三个部分：Header，Body 和 Footer。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("scope"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subject"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n// 空一行\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n// 空一行\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("footer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("其中，Header 是必需的，Body 和 Footer 可以省略。")]),t._v(" "),e("p",[t._v("不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。")]),t._v(" "),e("h4",{attrs:{id:"_2-1-header"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-header","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 Header")]),t._v(" "),e("p",[t._v("Header部分只有一行，包括三个字段："),e("code",[t._v("type")]),t._v("（必需）、"),e("code",[t._v("scope")]),t._v("（可选）和 "),e("code",[t._v("subject")]),t._v("（必需）。")]),t._v(" "),e("h5",{attrs:{id:"（1）type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（1）type","aria-hidden":"true"}},[t._v("#")]),t._v(" （1）type")]),t._v(" "),e("p",[e("code",[t._v("type")]),t._v(" 用于说明 commit 的类别，"),e("strong",[t._v("只允许")]),t._v("使用下面列出来的标识。")]),t._v(" "),e("ul",[e("li",[t._v("build: 影响系统构建或外部依赖的修改(如: gulp, broccoli, npm)")]),t._v(" "),e("li",[t._v("ci: 对CI配置文件和脚本的更改(如: Travis, Circle, BrowserStack, SauceLabs)")]),t._v(" "),e("li",[t._v("docs: 仅仅是文档修改(documentation)")]),t._v(" "),e("li",[t._v("feat: 新功能(A new feature)")]),t._v(" "),e("li",[t._v("fix: 修补bug(A bug fix)")]),t._v(" "),e("li",[t._v("perf: 优化代码提升性能")]),t._v(" "),e("li",[t._v("refactor: 重构(既不是新增功能，也不是修改bug的代码变动)")]),t._v(" "),e("li",[t._v("style: 格式变动(不影响代码含义或运行的修改)，如空格，尾分号等")]),t._v(" "),e("li",[t._v("test: 添加缺失的测试或更正现有测试")])]),t._v(" "),e("p",[t._v("如果 "),e("code",[t._v("type")]),t._v(" 为 "),e("code",[t._v("feat")]),t._v(" 和 "),e("code",[t._v("fix")]),t._v("，则该 commit 将肯定出现在 Change log 之中。其他情况（"),e("code",[t._v("build")]),t._v("、"),e("code",[t._v("ci")]),t._v(", "),e("code",[t._v("docs")]),t._v("、"),e("code",[t._v("style")]),t._v("、"),e("code",[t._v("refactor")]),t._v("、"),e("code",[t._v("test")]),t._v("）由你决定，要不要放入 Change log，建议是不要。")]),t._v(" "),e("h5",{attrs:{id:"（2）scope"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（2）scope","aria-hidden":"true"}},[t._v("#")]),t._v(" （2）scope")]),t._v(" "),e("p",[e("code",[t._v("scope")]),t._v(" 用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。")]),t._v(" "),e("ul",[e("li",[t._v("common")]),t._v(" "),e("li",[t._v("compiler")]),t._v(" "),e("li",[t._v("router")]),t._v(" "),e("li",[t._v("service-worker")]),t._v(" "),e("li",[t._v("upgrade")])]),t._v(" "),e("h5",{attrs:{id:"（3）subject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（3）subject","aria-hidden":"true"}},[t._v("#")]),t._v(" （3）subject")]),t._v(" "),e("p",[e("code",[t._v("subject")]),t._v(" 是 commit 目的的简短描述，不超过50个字符。")]),t._v(" "),e("ul",[e("li",[t._v("以动词开头，使用第一人称现在时，比如 "),e("code",[t._v("change")]),t._v("，而不是 "),e("code",[t._v("changed")]),t._v(" 或 "),e("code",[t._v("changes")])]),t._v(" "),e("li",[t._v("第一个字母小写")]),t._v(" "),e("li",[t._v("结尾不加句号（。）")])]),t._v(" "),e("h4",{attrs:{id:"_2-2-body"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-body","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 Body")]),t._v(" "),e("p",[t._v("Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。")]),t._v(" "),e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("More detailed explanatory text, if necessary.  Wrap it to\nabout 72 characters or so.\n\nFurther paragraphs come after blank lines.\n\n- Bullet points are okay, too\n- Use a hanging indent\n")])])]),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("两个注意点")]),t._v(" "),e("ul",[e("li",[t._v("使用第一人称现在时，比如使用 "),e("code",[t._v("change")]),t._v(" 而不是 "),e("code",[t._v("changed")]),t._v(" 或 "),e("code",[t._v("changes")]),t._v("。")]),t._v(" "),e("li",[t._v("应该说明代码变动的动机，以及与以前行为的对比。")])])]),t._v(" "),e("h4",{attrs:{id:"_2-3-footer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-footer","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.3 Footer")]),t._v(" "),e("p",[t._v("Footer 部分只用于两种情况。")]),t._v(" "),e("h5",{attrs:{id:"（1）不兼容变动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（1）不兼容变动","aria-hidden":"true"}},[t._v("#")]),t._v(" （1）不兼容变动")]),t._v(" "),e("p",[t._v("如果当前代码与上一个版本不兼容，则 Footer 部分以 "),e("code",[t._v("BREAKING CHANGE")]),t._v(" 开头，后面是对变动的描述、以及变动理由和迁移方法。")]),t._v(" "),e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("BREAKING CHANGE: isolate scope bindings definition has changed.\n\n  To migrate the code follow the example below:\n\n  Before:\n\n  scope: {\n    myAttr: 'attribute',\n  }\n\n  After:\n\n  scope: {\n    myAttr: '@',\n  }\n\n  The removed `inject` wasn't generaly useful for directives so there should be no code using it.\n")])])]),e("h5",{attrs:{id:"（2）关闭-issue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#（2）关闭-issue","aria-hidden":"true"}},[t._v("#")]),t._v(" （2）关闭 Issue")]),t._v(" "),e("p",[t._v("如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。")]),t._v(" "),e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Closes #234\n")])])]),e("p",[t._v("也可以一次关闭多个 issue 。")]),t._v(" "),e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Closes #123, #245, #992\n")])])]),e("h4",{attrs:{id:"_2-4-revert"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-revert","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.4 Revert")]),t._v(" "),e("p",[t._v("还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以 "),e("code",[t._v("revert:")]),t._v(" 开头，后面跟着被撤销 Commit 的 Header。")]),t._v(" "),e("div",{staticClass:"language-code extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("revert: feat(pencil): add 'graphiteWidth' option\n\nThis reverts commit 667ecc1654a317a13331b17617d973392f415f02.\n")])])]),e("p",[t._v("Body部分的格式是固定的，必须写成 "),e("code",[t._v("This reverts commit <hash>")]),t._v("，其中的 "),e("code",[t._v("hash")]),t._v(" 是被撤销 commit 的 SHA 标识符。")]),t._v(" "),e("p",[t._v("如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的 "),e("code",[t._v("Reverts")]),t._v(" 小标题下面。")]),t._v(" "),e("h3",{attrs:{id:"三、commitizen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、commitizen","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、Commitizen")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen"),e("OutboundLink")],1),t._v(" 是一个撰写合格 Commit message 的工具。")]),t._v(" "),e("p",[t._v("安装命令如下。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g commitizen\n")])])]),e("p",[t._v("然后，在项目目录里，运行下面的命令，使其支持 Angular 的 Commit message 格式。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("commitizen init cz-conventional-changelog --save\n--save-exact\n")])])]),e("p",[t._v("以后，凡是用到 "),e("code",[t._v("git commit")]),t._v(" 命令，一律改为使用 "),e("code",[t._v("git cz")]),t._v("。这时，就会出现选项，用来生成符合格式的 Commit message。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(309),alt:"git-commit"}})]),t._v(" "),e("h3",{attrs:{id:"四、validate-commit-msg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、validate-commit-msg","aria-hidden":"true"}},[t._v("#")]),t._v(" 四、validate-commit-msg")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/kentcdodds/validate-commit-msg",target:"_blank",rel:"noopener noreferrer"}},[t._v("validate-commit-msg"),e("OutboundLink")],1),t._v(" 用于检查 Node 项目的 Commit message 是否符合格式。")]),t._v(" "),e("p",[t._v("它的安装是手动的。首先，拷贝下面这个"),e("a",{attrs:{href:"https://github.com/kentcdodds/validate-commit-msg/blob/master/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS文件"),e("OutboundLink")],1),t._v("，放入你的代码库。文件名可以取为"),e("code",[t._v("validate-commit-msg.js")]),t._v("。")]),t._v(" "),e("p",[t._v("接着，把这个脚本加入 Git 的 hook。下面是在 "),e("code",[t._v("package.json")]),t._v(" 里面使用 "),e("a",{attrs:{href:"http://npm.im/ghooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("ghooks"),e("OutboundLink")],1),t._v("，把这个脚本加为 "),e("code",[t._v("commit-msg")]),t._v(" 时运行。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ghooks"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./validate-commit-msg.js"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("然后，每次git commit的时候，这个脚本就会自动检查 Commit message 是否合格。如果不合格，就会报错。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" add -A\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"edit markdown"')]),t._v("\n\nINVALID COMMIT MSG: does not match "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<type>(<scope>): <subject>"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" was: edit markdown\n")])])]),e("h2",{attrs:{id:"生成-change-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成-change-log","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成 Change log")]),t._v(" "),e("p",[t._v("如果你的所有 Commit 都符合 Angular 格式，那么发布新版本时， Change log 就可以用脚本自动生成（"),e("a",{attrs:{href:"https://github.com/ajoslin/conventional-changelog/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("例1"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"https://github.com/karma-runner/karma/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("例2"),e("OutboundLink")],1),t._v("，"),e("a",{attrs:{href:"https://github.com/btford/grunt-conventional-changelog/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("例3"),e("OutboundLink")],1),t._v("）。")]),t._v(" "),e("p",[t._v("生成的文档包括以下三个部分。")]),t._v(" "),e("ul",[e("li",[t._v("New features")]),t._v(" "),e("li",[t._v("Bug fixes")]),t._v(" "),e("li",[t._v("Breaking changes.")])]),t._v(" "),e("p",[t._v("每个部分都会罗列相关的 commit ，并且有指向这些 commit 的链接。当然，生成的文档允许手动修改，所以发布前，你还可以添加其他内容。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/ajoslin/conventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-changelog"),e("OutboundLink")],1),t._v(" 就是生成 Change log 的工具，运行下面的命令即可。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g conventional-changelog\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" my-project\nconventional-changelog -p angular -i CHANGELOG.md -w\n")])])]),e("p",[t._v("上面命令不会覆盖以前的 Change log，只会在CHANGELOG.md的头部加上自从上次发布以来的变动。")]),t._v(" "),e("p",[t._v("如果你想生成所有发布的 Change log，要改为运行下面的命令。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("conventional-changelog -p angular -i CHANGELOG.md -w\n-r 0\n")])])]),e("p",[t._v("为了方便使用，可以将其写入 "),e("code",[t._v("package.json")]),t._v(" 的 "),e("code",[t._v("scripts")]),t._v(" 字段。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changelog"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog -p angular -i CHANGELOG.md -w -r 0"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("以后，直接运行下面的命令即可。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run changelog\n")])])]),e("h2",{attrs:{id:"环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 环境配置")]),t._v(" "),e("p",[t._v("配置好开发环境，使用时就如行云流水")]),t._v(" "),e("p",[t._v("你可以在 "),e("code",[t._v("pre-commit")]),t._v(" 里面添加其他的脚本，比如单元测试("),e("code",[t._v("ava")]),t._v(", "),e("code",[t._v("mocha")]),t._v(", "),e("code",[t._v("jasmine")]),t._v("...） 或者覆盖度测试("),e("code",[t._v("nyc")]),t._v(", "),e("code",[t._v("istanbul")]),t._v("...)。 当然，在 "),e("code",[t._v("pre-commit")]),t._v(" 的钩子里面添加的脚本越多，你的代码等待 "),e("code",[t._v("commit")]),t._v(" 的时间也就越长。")]),t._v(" "),e("p",[t._v("安装依赖")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g commitizen cz-conventional-changelog\n")])])]),e("p",[t._v("配置")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{ "path": "cz-conventional-changelog" }\'')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ~/.czrc\n")])])]),e("p",[t._v("或 package.json 中添加 "),e("code",[t._v("config.commitizen")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitizen"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cz-conventional-changelog"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("其他配置 package.json")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx git-cz"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changelog"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node scripts/genChangelog.js run"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gitHooks"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node scripts/verifyCommitMsg.js"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.{js, ts}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --fix"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("p",[t._v("参考：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commit message 和 Change log 编写指南"),e("OutboundLink")],1)])])])},[],!1,null,null,null);a.default=n.exports}}]);