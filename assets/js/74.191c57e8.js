(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{271:function(t,s,e){"use strict";e.r(s);var a=e(12),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"what-is-the-difference-between-an-expression-and-a-statement-in-javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-an-expression-and-a-statement-in-javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" What is the difference between an expression and a statement in JavaScript?")]),t._v(" "),e("h4",{attrs:{id:"answer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#answer","aria-hidden":"true"}},[t._v("#")]),t._v(" Answer")]),t._v(" "),e("p",[t._v("There are two main syntactic categories in JavaScript: expressions and statements. A third one is both together, referred to as an expression statement. They are roughly summarized as:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Expression")]),t._v(": produces a value")]),t._v(" "),e("li",[e("strong",[t._v("Statement")]),t._v(": performs an action")]),t._v(" "),e("li",[e("strong",[t._v("Expression statement")]),t._v(": produces a value and performs an action")])]),t._v(" "),e("p",[t._v("A general rule of thumb:")]),t._v(" "),e("blockquote",[e("p",[t._v("If you can print it or assign it to a variable, it’s an expression. If you can’t, it’s a statement.")])]),t._v(" "),e("h5",{attrs:{id:"statements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statements","aria-hidden":"true"}},[t._v("#")]),t._v(" Statements")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("declaration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Statements appear as instructions that do something but don't produce values.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Assign `x` to the absolute value of `y`.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The only expression in the above code is "),e("code",[t._v("y >= 0")]),t._v(" which produces a value, either "),e("code",[t._v("true")]),t._v(" or "),e("code",[t._v("false")]),t._v(". A value is not produced by other parts of the code.")]),t._v(" "),e("h5",{attrs:{id:"expressions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expressions","aria-hidden":"true"}},[t._v("#")]),t._v(" Expressions")]),t._v(" "),e("p",[t._v("Expressions produce a value. They can be passed around to functions because the interpreter replaces them with the value they resolve to.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 10")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastCharacter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "t"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),e("h5",{attrs:{id:"expression-statements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expression-statements","aria-hidden":"true"}},[t._v("#")]),t._v(" Expression statements")]),t._v(" "),e("p",[t._v("There is an equivalent version of the set of statements used before as an expression using the conditional operator:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Assign `x` as the absolute value of `y`.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" y "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y\n")])])]),e("p",[t._v("This is both an expression and a statement, because we are declaring a variable "),e("code",[t._v("x")]),t._v(" (statement) as an evaluation (expression).")]),t._v(" "),e("h4",{attrs:{id:"good-to-hear"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#good-to-hear","aria-hidden":"true"}},[t._v("#")]),t._v(" Good to hear")]),t._v(" "),e("ul",[e("li",[t._v("Function declarations vs function expressions")])]),t._v(" "),e("h5",{attrs:{id:"additional-links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#additional-links","aria-hidden":"true"}},[t._v("#")]),t._v(" Additional links")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://stackoverflow.com/questions/12703214/javascript-difference-between-a-statement-and-an-expression",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is the difference between a statement and an expression?"),e("OutboundLink")],1)])])])},[],!1,null,null,null);n.options.__file="expression-vs-statement.md";s.default=n.exports}}]);