(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{542:function(t,e,n){"use strict";n.r(e);var o={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},s=n(2),i=Object(s.a)(o,function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.slotKey}},[n("p",[t._v("Find the contiguous subarray within an array (containing at least one number) which has the largest sum.")]),t._v(" "),n("p",[t._v("For example, given the array [-2,1,-3,4,-1,2,1,-5,4],\nthe contiguous subarray [4,-1,2,1] has the largest sum = 6.")]),t._v(" "),n("p",[t._v("click to show more practice.")]),t._v(" "),n("p",[t._v("More practice:")]),t._v(" "),n("p",[t._v("If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.")])])},[],!1,null,null,null);i.options.__file="question.md";e.default=i.exports}}]);