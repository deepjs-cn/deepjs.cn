(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{273:function(t,e,v){"use strict";v.r(e);var a={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},i=v(2),_=Object(i.a)(a,function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.slotKey}},[v("h1",{attrs:{id:"hybrid"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hybrid","aria-hidden":"true"}},[t._v("#")]),t._v(" Hybrid")]),t._v(" "),v("p",[t._v("Hybrid App（混合模式移动应用）是指介于web-app、native-app这两者之间的app，兼具“Native App良好用户交互体验的优势”和“Web App跨平台开发的优势”。")]),t._v(" "),v("p",[t._v("Hybrid App按网页语言与程序语言的混合，通常分为三种类型：多View混合型，单View混合型，Web主体型。")]),t._v(" "),v("ul",[v("li",[t._v("PhoneGap")]),t._v(" "),v("li",[t._v("WeX5")]),t._v(" "),v("li",[t._v("Kerkee")]),t._v(" "),v("li",[t._v("AppCan")]),t._v(" "),v("li",[t._v("APICloud")]),t._v(" "),v("li",[t._v("ReactNative")]),t._v(" "),v("li",[t._v("Weex")])]),t._v(" "),v("p",[t._v("Web App、Hybrid App、Native APP对比")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}}),t._v(" "),v("th",[t._v("Web App(网页应用)")]),t._v(" "),v("th",[t._v("Hybrid App(混合应用)")]),t._v(" "),v("th",[t._v("Native App(原生应用)")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("开发成本")]),t._v(" "),v("td",[t._v("低")]),t._v(" "),v("td",[t._v("中")]),t._v(" "),v("td",[t._v("高")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("维护更新")]),t._v(" "),v("td",[t._v("简单")]),t._v(" "),v("td",[t._v("简单")]),t._v(" "),v("td",[t._v("复杂")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("体验")]),t._v(" "),v("td",[t._v("差")]),t._v(" "),v("td",[t._v("中")]),t._v(" "),v("td",[t._v("优")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("Store或market认可")]),t._v(" "),v("td",[t._v("不认可")]),t._v(" "),v("td",[t._v("认可")]),t._v(" "),v("td",[t._v("认可")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("安装")]),t._v(" "),v("td",[t._v("不需要")]),t._v(" "),v("td",[t._v("需要")]),t._v(" "),v("td",[t._v("需要")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("跨平台")]),t._v(" "),v("td",[t._v("优")]),t._v(" "),v("td",[t._v("优")]),t._v(" "),v("td",[t._v("差")])])])]),t._v(" "),v("h2",{attrs:{id:"实现方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实现方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现方案")]),t._v(" "),v("p",[t._v("感谢 Marcus Westin的开源框架 "),v("a",{attrs:{href:"https://github.com/marcuswestin/WebViewJavascriptBridge/blob/master/WebViewJavascriptBridge/WebViewJavascriptBridge_JS.m",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebViewJavascriptBridge"),v("OutboundLink")],1),t._v("，应该是当前最流行最成功的OC与Web交互实现了。")]),t._v(" "),v("h2",{attrs:{id:"原理解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原理解析","aria-hidden":"true"}},[t._v("#")]),t._v(" 原理解析")]),t._v(" "),v("ul",[v("li",[t._v("其他资料 https://juejin.im/entry/58e4a76a44d904006d2a7778")])]),t._v(" "),v("p",[t._v("我们可以在OC中调用javascript方法，但是反过来不能在javascript中调用OC方法。所以WebViewJavascriptBridge的实现过程就是在OC环境和javascript环境各自保存一个相互调用的信息。每一个调用之间都有id和callbackid来找到两个环境对应的处理。下图是我对于每个类的讲解：")]),t._v(" "),v("p",[t._v("通过 WebViewJavascriptBridge.js 搭建 Native 和 JavaScript 互通消息的桥梁")]),t._v(" "),v("div",{staticClass:"tip custom-block"},[v("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),v("p",[t._v("这里只是 WebViewJavascriptBridge.js 的实现分析，不涉及 Native 端的相关实现。")])])])},[],!1,null,null,null);_.options.__file="readme.md";e.default=_.exports}}]);