import{_ as i,o as l,c as e,V as s}from"./chunks/framework.75ed6a74.js";const t=JSON.parse('{"title":"手写面试题","description":"","frontmatter":{"sidebar":true,"page":true,"footer":false},"headers":[{"level":2,"title":"TODO","slug":"todo","link":"#todo","children":[]}],"relativePath":"handwrite/index.md","filePath":"handwrite/index.md"}'),c={name:"handwrite/index.md"},a=[s('<h1 id="手写面试题" tabindex="-1">手写面试题 <a class="header-anchor" href="#手写面试题" aria-label="Permalink to &quot;手写面试题&quot;">​</a></h1><p>帮你搞定 90% JS 手写题</p><ul><li><a href="https://github.com/cloudyan/diy-x" target="_blank" rel="noreferrer">https://github.com/cloudyan/diy-x</a></li></ul><h2 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;TODO&quot;">​</a></h2><ol class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 手写 call, apply 和 bind 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 new 关键字</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 instanceof 关键字</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 const 关键字</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现数据类型判断 typeOf</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 JSON.stringify</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 JSON.parse</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 数组去重、对象数组去重 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 数组与树结构互转 🔥 <ol><li>array2tree</li><li>tree2array</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现一些 Array 方法 <ol><li>数组 forEach, filter, map, reduce</li><li>扁平化 flatten 方法</li><li>实现 flatMap 函数(先 map 再 flat) 🔥</li><li>实现数组乱序输出</li><li>将数组扁平化，输出一个升序且不重复的数组</li><li>实现指定长度拆分数组（lodash.chunk 方法）🔥</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现一些 Object 方法 <ol><li>实现 Object.create 方法</li><li>实现 Object.assign 方法</li><li>实现 Object.freeze 方法</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 JS 函数记忆 memoize 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现深拷贝 deepClone 🔥 <ol><li>shallowCopy</li><li>deepClone</li><li>深度优先遍历与广度优先遍历，如何实现？🔥</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现宽松相等 looseEqual</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 实现 JS 的继承 ES5/ES6 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现防抖函数 debounce 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现节流函数 throttle 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现函数柯里化 curry 🔥 <ol><li>柯里化 currying</li><li>偏函数 partial</li><li>反柯里化 uncurrying</li><li>组合函数 compose</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 闭包相关问题 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 计时相关问题 <ol><li>使用闭包实现每隔一秒打印 1,2,3,4</li><li>实现 setTimeout 模拟 setInterval🔥</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 解析 URL 参数为对象 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 手写 Promise 实现 🔥 <ol><li>实现简版 Promise</li><li>Promise.all() ES2015</li><li>Promise.race() ES2015</li><li>Promise.prototype.finally() ES2018</li><li>Promise.allSettled() ES2020</li><li>Promise.any() ES2021</li><li>Promise.try() Stage 1</li><li>pAny, pTry, pMap, pLimit 等</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> N 道 Promise 面试题一次爽到底</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 sleep 方法</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现函数 promisify</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 封装 ajax 请求 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 jsonp 跨域 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现请求控制(超时,取消,重试,并发)🔥 <ol><li>超时取消</li><li>手动取消</li><li>失败重试</li><li>并发控制</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 手写 async/await 的实现 🔥 <ol><li>基于 generator 实现</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现懒加载 🔥 <ol><li>实现图片懒加载 by <code>scroll</code></li><li>实现图片懒加载 by <code>IntersectionObserver</code></li><li>实现 iframe 懒加载</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现观察者模式 Observer 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现发布订阅模式 EventEmitter（事件总线）🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 字符格式化（千分位等） <ol><li>实现数字千分位分隔</li><li>手机号按 3-4-4 格式化</li><li>实现字符串的 repeat 方法</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现简版模板引擎</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 add 方法 🔥 <ol><li>实现 add(1,2,3) 与 add(1)(2)(3) 结果相同</li><li>实现无限累加 sum 函数</li><li>实现大数加法</li><li>实现一个异步的 sum/add</li><li>如何控制 add 异步请求的并发次数</li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 代码分析题（LazyMan） 🔥 <ol><li>满足条件 <code>a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3</code></li><li>实现 <code>(5).add(3).minus(2)</code> 功能</li><li>实现 <code>LazyMan(&#39;Tony&#39;).eat(&#39;lunch&#39;).sleepFirst(5)</code></li></ol></li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 对字符串进行压缩编码 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现一个 once 函数，记忆返回结果只执行一次 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现 LRU Cache 算法 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现斐波那契数列 fibonacci 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 循环打印红黄绿灯 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 实现管理本地缓存过期的方法 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 写一个全排列、全组合的函数 🔥</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 查找字符串中出现最多的字符和个数</li></ol><p>参考</p><ul><li><a href="https://mp.weixin.qq.com/s/oOmX4lcCy_vZfXx0KjLKOg" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/oOmX4lcCy_vZfXx0KjLKOg</a></li><li><a href="https://q.shanyue.tech/fe/" target="_blank" rel="noreferrer">https://q.shanyue.tech/fe/</a></li></ul>',7)];const k=i(c,[["render",function(i,s,t,c,k,o){return l(),e("div",null,a)}]]);export{t as __pageData,k as default};
